diff -rupN switchboard-plug-about.orig/src/Plug.vala switchboard-plug-about/src/Plug.vala
--- switchboard-plug-about.orig/src/Plug.vala	2015-04-20 14:15:12.136173942 +0200
+++ switchboard-plug-about/src/Plug.vala	2015-04-20 14:18:56.185461966 +0200
@@ -20,19 +20,13 @@ public class About.Plug : Switchboard.Pl
     private string os;
     private string website_url;
     private string bugtracker_url;
-    private string codename;
-    private string version;
     private string arch;
     private string processor;
     private string memory;
     private string graphics;
     private string hdd;
     private Gtk.Label based_off;
-    
-    
-    private string is_ubuntu;
-    private string ubuntu_version;
-    private string ubuntu_codename;
+
     private Gtk.EventBox main_grid;
 
     public Plug () {
@@ -93,75 +87,12 @@ public class About.Plug : Switchboard.Pl
     private void setup_info () {
 
         // Operating System
-        
-        File file = File.new_for_path("/etc/lsb-release");
-        try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                if ("DISTRIB_ID=" in line) {
-                    os = line.replace ("DISTRIB_ID=", "");
-                    if ("\"" in os) {
-                        os = os.replace ("\"", "");
-                    }
-                } else if ("DISTRIB_RELEASE=" in line) {
-                    version = line.replace ("DISTRIB_RELEASE=", "");
-                } else if ("DISTRIB_CODENAME=" in line) {
-                    codename = line.replace ("DISTRIB_CODENAME=", "");
-                    codename = capitalize (codename);
-                }
-            }
-        } catch (Error e) {
-            warning("Couldn't read lsb-release file, assuming elementary OS 0.3");
-            os = "elementary OS";
-            version = "0.3";
-            codename = "Freya";
-        }
-        
-        file = File.new_for_path("/etc/upstream-release/lsb-release");
-        try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                if ("DISTRIB_ID=" in line) {
-                    is_ubuntu = line.replace ("DISTRIB_ID=", "");
-                } else if ("DISTRIB_RELEASE=" in line) {
-                    ubuntu_version = line.replace ("DISTRIB_RELEASE=", "");
-                } else if ("DISTRIB_CODENAME=" in line) {
-                    ubuntu_codename = line.replace ("DISTRIB_CODENAME=", "");
-                    ubuntu_codename = capitalize (ubuntu_codename);
-                }
-            }
-        } catch (Error e) {
-            warning("Couldn't read upstream lsb-release file, assuming none");
-            is_ubuntu = null;
-            ubuntu_version = null;
-            ubuntu_codename = null;
-        }
+
+        os = "Arch Linux";
 
         //Bugtracker and website
-        file = File.new_for_path("/etc/dpkg/origins/"+os);
-        bugtracker_url = "";
-        website_url = "";
-        try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                 if (line.has_prefix("Bugs:")) {
-                    bugtracker_url = line.replace ("Bugs: ", "");
-                }
-            }
-        } catch (Error e) {
-            warning(e.message);
-            warning("Couldn't find bugtracker/website, using elementary OS defaults");
-            if (website_url == "")
-                website_url = "http://elementary.io";
-            if (bugtracker_url == "")
-                bugtracker_url = "https://bugs.launchpad.net/elementaryos/+filebug";
-        }
+        bugtracker_url = "https://bugs.archlinux.org/";
+        website_url = "https://www.archlinux.org/";
 
         // Architecture
         try {
@@ -272,18 +203,12 @@ public class About.Plug : Switchboard.Pl
         var logo = new Gtk.Image.from_icon_name ("distributor-logo", Gtk.icon_size_register ("LOGO", 128, 128));
 
         var title = new Gtk.Label (null);
-        title.set_markup (("%s %s %s <sup><small>(%s)</small></sup>").printf (os, version, codename, arch));
+        title.set_markup (("%s <sup><small>(%s)</small></sup>").printf (os, arch));
         title.get_style_context ().add_class ("h2");
         title.set_alignment (0, 0);
         title.set_selectable (true);
-        
-        if (is_ubuntu != null) {
-            based_off = new Gtk.Label (_("Built on %s %s").printf (is_ubuntu, ubuntu_version));
-            based_off.set_alignment (0, 0);
-            based_off.set_selectable (true);
-        }
 
-        var website_label = new Gtk.LinkButton.with_label ("http://elementary.io", _("Website"));
+        var website_label = new Gtk.LinkButton.with_label ("https://archlinux.org", _("Website"));
         website_label.set_alignment (0, 0);
 
         var details = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
@@ -352,34 +277,28 @@ public class About.Plug : Switchboard.Pl
         hardware_grid.attach (graphics_info, 100, 120, 100, 25);
         hardware_grid.attach (hdd_info, 100, 160, 100, 25);
 
-        var help_button = new Gtk.Button.with_label ("?");
-        help_button.get_style_context ().add_class ("help_button");
-        help_button.halign = Gtk.Align.CENTER;
-
-        help_button.clicked.connect (() => {
+        // Forums button
+        var bbs_button = new Gtk.Button.with_label (_("Forums"));
+        bbs_button.clicked.connect (() => {
             try {
-                AppInfo.launch_default_for_uri ("http://elementary.io/support", null);
+                AppInfo.launch_default_for_uri ("https://bbs.archlinux.org", null);
             } catch (Error e) {
                 warning (e.message);
             }
         });
 
-        help_button.size_allocate.connect ( (alloc) => {
-            help_button.set_size_request (alloc.height, -1);
-        });
-
-        // Translate button
-        var translate_button = new Gtk.Button.with_label (_("Suggest Translations"));
-        translate_button.clicked.connect (() => {
+        // Wiki button
+        var wiki_button = new Gtk.Button.with_label (_("Wiki"));
+        wiki_button.clicked.connect (() => {
             try {
-                AppInfo.launch_default_for_uri ("https://translations.launchpad.net/elementary", null);
+                AppInfo.launch_default_for_uri ("https://wiki.archlinux.org", null);
             } catch (Error e) {
                 warning (e.message);
             }
         });
 
         // Bug button
-        var bug_button = new Gtk.Button.with_label (_("Report a Problem"));
+        var bug_button = new Gtk.Button.with_label (_("Bugs"));
         bug_button.clicked.connect (() => {
             try {
                 AppInfo.launch_default_for_uri (bugtracker_url, null);
@@ -388,11 +307,11 @@ public class About.Plug : Switchboard.Pl
             }
         });
 
-        // Update button
-        var update_button = new Gtk.Button.with_label (_("Check for Updates"));
-        update_button.clicked.connect (() => {
+        // Packages button
+        var pkg_button = new Gtk.Button.with_label (_("Packages"));
+        pkg_button.clicked.connect (() => {
             try {
-                Process.spawn_command_line_async("update-manager");
+                AppInfo.launch_default_for_uri ("https://archlinux.org/packages/", null);
             } catch (Error e) {
                 warning (e.message);
             }
@@ -401,12 +320,11 @@ public class About.Plug : Switchboard.Pl
         // Create a box for the buttons
         var button_box = new Gtk.ButtonBox (Gtk.Orientation.HORIZONTAL);
         button_box.spacing = 6;
-        button_box.pack_start (help_button, false, false, 0);
-        button_box.set_child_non_homogeneous (help_button, true);
-        button_box.pack_end (translate_button, false, false, 0);
+        button_box.pack_start (bbs_button, false, false, 0);
+        button_box.pack_end (wiki_button, false, false, 0);
         button_box.pack_end (bug_button, false, false, 0);
-        button_box.pack_end (update_button, false, false, 0);
-        
+        button_box.pack_end (pkg_button, false, false, 0);
+
         // Fit everything in a box
         var box = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
         box.pack_start (elementary_box, false, false, 24);
